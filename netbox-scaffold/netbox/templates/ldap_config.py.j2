import ldap

from django_auth_ldap.config import LDAPSearch, LDAPGroupQuery, NestedGroupOfNamesType

# Server URI
AUTH_LDAP_SERVER_URI = "ldaps://dc1.ads.uni-passau.de"

# The following may be needed if you are binding to Active Directory.
AUTH_LDAP_CONNECTION_OPTIONS = { ldap.OPT_REFERRALS: 0 }

# Set the DN and password for the NetBox service account.
AUTH_LDAP_BIND_DN = "{{ netbox_ldap_bind_dn }}"
AUTH_LDAP_BIND_PASSWORD = "{{ netbox_ldap_proxy_pass }}"

# Include this setting if you want to ignore certificate errors. This might be needed to accept a self-signed cert.
# Note that this is a NetBox-specific setting which sets:
#     ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
LDAP_IGNORE_CERT_ERRORS = False

# This search matches users with the sAMAccountName equal to the provided username. This is required if the user's
# username is not in their DN (Active Directory).

# If a user's DN is producible from their username, we don't need to search.
# AUTH_LDAP_USER_DN_TEMPLATE = "cn=%(user)s,ou=admin,dc=ads,dc=uni-passau,dc=de"

# You can map user attributes to Django attributes as so.
AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail"
}

## This search ought to return all groups to which the user belongs. django_auth_ldap uses this to determine group
## hierarchy.

AUTH_LDAP_GROUP_SEARCH = {{ netbox_ldap_group_search }}
AUTH_LDAP_GROUP_TYPE = NestedGroupOfNamesType()
AUTH_LDAP_USER_SEARCH = {{ netbox_ldap_user_search }}

#AUTH_LDAP_REQUIRE_GROUP = {{ netbox_ldap_active_group }}
AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    "is_active": {{ netbox_ldap_active_group }},
    "is_staff": {{ netbox_ldap_staff_group }},
    "is_superuser": {{ netbox_ldap_superuser_group }}
}


## Define special user types using groups. Exercise great caution when assigning superuser status.
#
## For more granular permissions, we can map LDAP groups to Django groups.
AUTH_LDAP_FIND_GROUP_PERMS = True
AUTH_LDAP_MIRROR_GROUPS = False
#AUTH_LDAP_CACHE_GROUPS = True
#AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600
